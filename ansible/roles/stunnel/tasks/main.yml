---
- name: Do stunnel atomic install on Master nodes
  hosts: masters
  roles:
     - stunnel

[root@hp-director01 infra-maint]# cat roles/stunnel/tasks/main.yml
---

- name: Detecting Operating System
  stat:
    path: /run/ostree-booted
  register: ostree_booted

# Locally setup containerized facts for now
- set_fact:
    is_atomic: "{{ ostree_booted.stat.exists }}"
- set_fact:
    is_containerized: "{{ (is_atomic | bool) or (containerized | default(false) | bool) }}"

- block:

  - name: Check if stunnel already running
    shell: docker ps
    register: docker_pre_ps
    changed_when: false
    ignore_errors: true
    failed_when: false

  - name: Check if stunnel container was running and/or exited
    shell: docker ps -a -f status=exited -f status=dead | grep stunnel
    register: docker_all_ps
    changed_when: false
    ignore_errors: true
    failed_when: false

  - name: Remove dead stunnel container
    shell: docker rm $(docker ps -a | grep stunnel | cut -f1 -d " ")
    when: '"stunnel" in docker_all_ps.stdout'

  - name: Pull the asa/stunnel image
    docker_image:
      name: asa/stunnel:rc
      pull: yes
      state: present
      cacert_path: no
    changed_when: false

  - name: Allow Port TCP 389
    shell: iptables -A OS_FIREWALL_ALLOW -p tcp --dport 389 -j ACCEPT
    when: '"stunnel" not in docker_pre_ps.stdout and "stunnel" not in docker_all_ps.stdout'

  - name: Add port 389 into /etc/sysconfig/iptables
    lineinfile:
      dest: '/etc/sysconfig/iptables'
      line: '-A OS_FIREWALL_ALLOW -p tcp -j ACCEPT --dport 389'
      insertbefore: 'COMMIT'
    when: '"stunnel" not in docker_pre_ps.stdout and "stunnel" not in docker_all_ps.stdout'

#  - name: Run stunnel container
#    shell: docker run --restart=always -it --name stunnel --privileged --ipc=host --net=host --pid=host -e HOST=/host -e NAME=stunnel -e IMAGE=stunnel -d asa/stunnel:rc tail -f /dev/null

#    when: '"stunnel" not in docker_pre_ps.stdout'

  - name: Run stunnel container
    docker_container:
      name: stunnel
      image: asa/stunnel:rc
      restart_policy: always
      restart_retries: 3
      recreate: yes
      privileged: true
      ipc_mode: host
      network_mode: host
      pid_mode: host
      env:
         HOST: /host
         NAME: stunnel
         IMAGE: stunnel
      detach: yes
      tty: true
      state: started
      command: tail -f /dev/null

  - name: Get docker ps output
    shell: docker ps
    register: docker_ps
    changed_when: false
    ignore_errors: true
    failed_when: '"stunnel" not in docker_ps.stdout'

  when: is_containerized | bool
